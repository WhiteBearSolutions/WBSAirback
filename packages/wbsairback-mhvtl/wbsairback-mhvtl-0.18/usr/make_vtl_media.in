#!/bin/bash
#
# Designed to be called from mhvtl rc script
#
# * Copyright (C) 2005 Mark Harvey markh794@gmail.com
# *                                mark_harvey@symantec.com
# *
# * This program is free software; you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation; either version 2 of the License, or
# * (at your option) any later version.
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# *
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
export PATH=/usr/bin:$PATH

if [ $# -ne 1 ]; then
	echo "Usage: $0 username"
	exit 1
fi

MHVTL_HOME_PATH=@HOME_PATH@

# Source default config file if not already set
if [ "X$MHVTL_CONFIG_PATH" == "X" ]; then
	. @CONF_PATH@/mhvtl.conf
else
	. $MHVTL_CONFIG_PATH/mhvtl.conf
fi

USER=${1:-vtl}	# Default user 'vtl'

#dry='echo'

run() {
	if [ -x "$(which setuidgid >/dev/null 2>&1)" ]; then
		$dry setuidgid $USER $*
	else
		$dry su $USER -c "$*"
	fi
}

# I'm sure there is a better method then this...
# There is.. Thanks to Gavin Barnard.
set_density() {
	density=$1
	regex='[A-Z0-9]{6,8}([SLXTJ])([123456ABWX])$'
	#regex='[A-Z0-9]{4,6}([SLXTJ])([123456ABWX])[0-9]*$' # for bacula

	if [[ $density =~ $regex ]]; then
		matches=${#BASH_REMATCH[*]}
		if [ ${BASH_REMATCH[1]} = 'L' ]; then
			DENSITY=`echo -e "LTO${BASH_REMATCH[2]}"`
		fi
		if [ ${BASH_REMATCH[1]} = 'S' ]; then
			DENSITY=`echo -e "SDLT${BASH_REMATCH[2]}"`
		fi
		if [ ${BASH_REMATCH[1]} = 'X' ]; then
			DENSITY=`echo -e "AIT${BASH_REMATCH[2]}"`
		fi
		if [ ${BASH_REMATCH[1]} = 'T' ]; then
			DENSITY=`echo -e "T10K${BASH_REMATCH[2]}"`
		fi
		if [ ${BASH_REMATCH[1]} = 'J' ]; then
#FIXME: please fix me when ever the J WORM TAPE are added to mktape
			DENSITY=`echo -e "unknown tape density"`
		fi
	fi
}

##################################################################
## Main starts here...
##################################################################

# Set default capacity to 500M if not defined.
CAPACITY=${CAPACITY:=500}


if [ ! -d $MHVTL_HOME_PATH ]; then
	mkdir -p $MHVTL_HOME_PATH
	chmod 750 $MHVTL_HOME_PATH
	chown $USER:$USER $MHVTL_HOME_PATH
fi

# Create any media specified in library config.
umask 002

for LIBCONTENTS in $MHVTL_CONFIG_PATH/library_contents.*
do

	TAPE_HOME=""
	TAPE_HOME=`awk  '/WBS-DIR/ { print $3 }' $LIBCONTENTS`
        if [ -z $TAPE_HOME ]; then
              continue;
        fi
	CAPA_AUX=`awk  '/CAPACITY/ { print $3 }' $LIBCONTENTS`
	if [ -z $CAPA_AUX ]; then
              CAPACITY=${CAPACITY:=500}
	else	
	      CAPACITY=$CAPA_AUX
        fi	
	echo $TAPE_HOME >> tmpaux
	cat tmpaux | sed 's/\//\\\//g'  > tmpaux.new
	TAPE_HOME=`cat tmpaux.new`
	MOUNT_PATH=`awk '/dev\/'$TAPE_HOME'/ {print $2}' /etc/bacula/fstab`
	# Cleaning carts
	for a in `cat $LIBCONTENTS|awk '/^Slot.*CLN.+/ {print $3}'|sort -u`
	do
		set_density $a
		if [ ! -d $MHVTL_HOME_PATH/$a ]; then
			run "mktape -s $CAPACITY -t clean -m $a -d $DENSITY"
		fi
	done

	# WORM media
	for a in `cat $LIBCONTENTS|awk '/^Slot/ {print $3}'|grep ^W|sort -u`
	do
		set_density $a
		if [ ! -d $MHVTL_HOME_PATH/$a ]; then
			run "mktape -s $CAPACITY -t WORM -m $a -d $DENSITY"
		fi
	done
	# Rest must be Data

	for a in `cat $LIBCONTENTS|awk '/^Slot/ {print $3}'|sort -u`
	do
		set_density $a
		if [ -d $MHVTL_HOME_PATH ]; then
			if [ -d $MOUNT_PATH ]; then
	                        if [ -z $MOUNT_PATH ]; then
					echo
				else
					TAPE_HOME=$MOUNT_PATH
					if [ ! -d $TAPE_HOME ]; then
						mkdir $TAPE_HOME
					fi
					AUX=$MHVTL_HOME_PATH
					MHVTL_HOME_PATH=$MOUNT_PATH
					export MHVTL_HOME_PATH=$MOUNT_PATH
					run "mktape -s $CAPACITY -t data -M $MOUNT_PATH -m $a -d $DENSITY"
					MHVTL_HOME_PATH=$AUX
					export MHVTL_HOME_PATH=$AUX
                                        if [ ! -L $MHVTL_HOME_PATH/$a ]; then
					  ln -s $TAPE_HOME/$a $MHVTL_HOME_PATH/$a
                                        fi
					chown -R vtl:vtl $MHVTL_HOME_PATH/$a
				fi
			fi
		fi
	done
	rm tmpaux
	rm tmpaux.new
done
